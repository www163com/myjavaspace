package com.billyang.test;

import java.util.List;
import java.util.Optional;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.annotation.Rollback;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.transaction.annotation.Transactional;

import com.billyang.App22;
import com.billyang.dao.UsersRepository;
import com.billyang.dao.UsersRepositoryByName;
import com.billyang.dao.UsersRepositoryCrudRepository;
import com.billyang.dao.UsersRepositoryPadingAndSorting;
import com.billyang.dao.UsersRepositoryQueryAnnotation;
import com.billyang.pojo.Users;

/**   
*    
* 项目名称：22-spring-boot-jpa   
* 类名称：UsersRepostiryTest   
* 类描述：   
* 创建人：yangcan14944   
* 创建时间：2018-10-8 下午4:22:59   
* 修改人：yangcan14944   
* 修改时间：2018-10-8 下午4:22:59   
* 修改备注：   
* @version    
*    
*/
@RunWith(SpringJUnit4ClassRunner.class)
@SpringBootTest(classes = App22.class)
public class UsersRepostiryTest {
	@Autowired
	private UsersRepository usersRepostory;
	@Autowired
	private UsersRepositoryByName usersRepositoryByName;
	@Autowired
	private UsersRepositoryQueryAnnotation usersRepositoryQueryAnnotation;
	@Autowired
	private UsersRepositoryCrudRepository usersRepositoryCrudRepository;
	@Autowired
	private UsersRepositoryPadingAndSorting usersRepositoryPadingAndSorting;
	@Test
	public void testSave(){
		Users users = new Users();
		users.setAddress("天津市");
		users.setAge(24);
		users.setName("王五");
		this.usersRepostory.save(users);
	}
	/**
	 * Repository--方法名称命名查询测试
	 */
	@Test
	public void testFindByName(){
		List<Users> list = this.usersRepositoryByName.findByName("张三");
		for (Users users : list) {
			System.out.println(users);
		}
	}
	/**
	 * Repository--方法名称命名查询测试
	 */
	@Test
	public void testFindByNameAndAge(){
		List<Users> list = this.usersRepositoryByName.findByNameAndAge("张三",20);
		for (Users users : list) {
			System.out.println(users);
		}
	}
	/**
	 * Repository--方法名称命名查询测试
	 */
	@Test
	public void testFindByNameLike(){
		List<Users> list = this.usersRepositoryByName.findByNameLike("张%");
		for (Users users : list) {
			System.out.println(users);
		}
	}
	/**
	 * Repository -@Query测试
	 */
	@Test
	public void queryByNameUseHQL(){
		List<Users> list = this.usersRepositoryQueryAnnotation.queryByNameUseHQL("张三");
		for (Users users : list) {
			System.out.println(users);
		}
	}
	/**
	 * Repository -@Query测试
	 */
	@Test
	public void queryByNameUseSQL(){
		List<Users> list = this.usersRepositoryQueryAnnotation.queryByNameUseSQL("张三");
		for (Users users : list) {
			System.out.println(users);
		}
	}
	/**
	 * Repository -@Query测试
	 */
	@Test
	@Transactional //@Transactional与@Test一起使用时 事务是自动回滚的
	@Rollback(false)//取消自动回滚
	public void updateUsersNameById(){
		this.usersRepositoryQueryAnnotation.updateUsersNameById("张三四",1);
	}
	
	/**
	 * CrudRepository --测试
	 */
	@Test
	public void testCrudRepositorySave(){
		Users user = new Users();
		user.setAddress("重庆");
		user.setAge(32);
		user.setName("赵六");
		this.usersRepositoryCrudRepository.save(user);
	}
	/**
	 * CrudRepository --测试
	 */
	@Test
	public void testCrudRepositoryUpdate(){
		Users user = new Users();
		user.setId(4);
		user.setAddress("南京");
		user.setAge(40);
		user.setName("赵六");
		this.usersRepositoryCrudRepository.save(user);
	}
	/**
	 * CrudRepository --测试
	 */
	@Test
	public void testCrudRepositoryFindOne(){
		Optional<Users> user = this.usersRepositoryCrudRepository.findById(4);
		System.out.println(user);
	}
	/**
	 * CrudRepository --测试
	 */
	@Test
	public void testCrudRepositoryFindAll(){
		List<Users> list = (List<Users>) this.usersRepositoryCrudRepository.findAll();
		for (Users users : list) {
			System.out.println(users);
		}
	}
	/**
	 * CrudRepository --测试
	 */
	@Test
	public void testCrudRepositoryDeletById(){
		this.usersRepositoryCrudRepository.deleteById(4);
	}
}
